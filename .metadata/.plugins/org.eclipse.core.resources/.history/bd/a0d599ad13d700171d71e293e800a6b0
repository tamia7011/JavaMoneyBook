package Moneybook.content;

import java.awt.List;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.math.BigDecimal;
import java.sql.SQLException;
import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import Constants.Constants;
import Database.AccountDAO;
import Database.DailyAccount;
import Database.Mileagesystem;
import Database.Account;
import Database.MonthAccount;
import Moneybook.calculator.Calculator;
import Moneybook.calendar.CalendarManager;
import java.awt.Font;

public class DataEntry extends JFrame {

	private static final long serialVersionUID = 1L; // i dont know what it is .....
	public static DataEntry thisFrame;
	private JTextField typeField;
	private JTextField nameField;
	public static JTextField priceField;
    private BigDecimal resultValue;
	JPanel contentPane;
	Account moneyData = new Account();
	MonthAccount monthAccount;
	AccountDAO accountDAO;
	DailyAccount dailyAccount;

	private JComboBox comboList;

	static String[] petStrings = { Constants.expenseType.Fixed.toString(), Constants.expenseType.Flexible.toString(),
			Constants.expenseType.Waste.toString(), Constants.expenseType.Default.toString() };

	public static DataEntry getInstance() {
		if (thisFrame == null) {
			thisFrame = new DataEntry();
			return thisFrame;
		}
		return thisFrame;
	}

	public DataEntry() {
		setTitle("DataEntry");
		init();
	}

	public void init() {
		setBounds(100, 100, 450, 450);
		JPanel panel = new JPanel();
		JPanel contentPane = panel;
		panel.setLayout(null);

		JLabel lblNewLabel = new JLabel("Insert information");
		lblNewLabel.setFont(new Font("±¼¸²", Font.PLAIN, 22));
		lblNewLabel.setBounds(147, 15, 168, 34);
		panel.add(lblNewLabel);

	    comboList = new JComboBox(petStrings);
		comboList.setBounds(182, 75, 182, 27);
		comboList.setSelectedIndex(0);
		panel.add(comboList);

		nameField = new JTextField();
		nameField.setBounds(182, 134, 182, 27);
		panel.add(nameField);
		nameField.setColumns(10);

		priceField = new JTextField();
		priceField.setBounds(182, 192, 182, 27);
		panel.add(priceField);
		priceField.setColumns(10);

		JLabel nameLabel = new JLabel("type");
		nameLabel.setBounds(107, 78, 43, 21);
		panel.add(nameLabel);

		JLabel priceLabel = new JLabel("name");
		priceLabel.setBounds(100, 137, 50, 21);
		panel.add(priceLabel);

		JLabel typeLabel = new JLabel("price");
		typeLabel.setBounds(107, 195, 50, 21);
		panel.add(typeLabel);
		
		JButton calculator = new JButton("Cal");
		calculator.setBounds(362, 192, 56, 27);
		panel.add(calculator);
		
		calculator.addActionListener(new CalculatorListener());

		JButton insertBtn = new JButton("insert data");
		insertBtn.setBounds(147, 260, 125, 29);
		panel.add(insertBtn);

		insertBtn.addActionListener(new InsertListener());

		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);

	}
	private class CalculatorListener implements ActionListener{
		@Override
		public void actionPerformed(ActionEvent e) {
			 new Calculator().create();
		}
	}
	private class InsertListener implements ActionListener {

		@Override
		public void actionPerformed(ActionEvent e) {

			accountDAO = Database.AccountDAO.getInstance();
			monthAccount = MonthAccount.getInstance();
			Mileagesystem mileage = Mileagesystem.getInstance();
			String name = nameField.getText();
			int price = Integer.parseInt(priceField.getText());
			String type = comboList.getSelectedItem().toString();
			Account data = new Account();
			data = accountDAO.selectinsertName(nameField.getText());
			System.out.println(data);
			if(data.getPrice() == 0) {
			moneyData.setName(name);
			moneyData.setPrice(price);
			moneyData.setType(type);
			moneyData.setDate(CalendarManager.getDate());
			monthAccount.calculateDataset(moneyData);
			System.out.println(monthAccount.getFixedExpenses());
			accountDAO.updateTotalBudget(monthAccount);
			dailyAccount = new DailyAccount(CalendarManager.getDate());
			dailyAccount.calculateDataset();
			mileage.setDate(CalendarManager.getDate());
			mileage.calculating();

			accountDAO.Insert(moneyData); 
			ContentsPanel.getInstance().showTable();
			thisFrame.setVisible(false);
			JOptionPane.showMessageDialog(null, "Successfully entered your data!!", "show information", JOptionPane.INFORMATION_MESSAGE);
			if(monthAccount.getSalary()/0.5 <= monthAccount.getTotalExpenses()){
				JOptionPane.showMessageDialog(null, "You've spent more than 50% of your budget!!", "warning", JOptionPane.WARNING_MESSAGE);
				}
			} else {
				JOptionPane.showMessageDialog(null, "Duplicate name", "warning", JOptionPane.WARNING_MESSAGE);
			}
		}
	}

}